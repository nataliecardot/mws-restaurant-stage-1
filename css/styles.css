body,
td,
th,
p {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 10pt;
  color: #333;
  line-height: 1.5;
}

body {
  /* Removes border that appears around sides of screen */
  margin: 0;
}

ul,
li {
  font-size: 10pt;
  color: #333;
}

a {
  color: orange;
  text-decoration: none;
}

a:hover,
a:focus {
  color: #288dd1;
  text-decoration: none;
}

/* TODO: Find out what this applies to */
a img {
  /* Shorthand for border-width, border-style, border-color */
  border: 0 none #fff;
}

h1 {
  margin: 0 0 20px;
}

/* Applies to restaurant hours table, and causes table to render more quickly. Whereas in the default table-layout property value of auto, in which column width is set by widest unbreakable content in cells (content dictating layout), with property value of fixed table and column widths are determined by width of table or col or by width of first row of cells. Column widths are split equally if widths not present in first row */
table {
  table-layout: fixed;
}

#maincontent {
  background-color: #f3f3f3;
}

#footer {
  background-color: #444;
  color: #dedede;
  font-size: 8pt;
  letter-spacing: 1px;
  padding: 25px;
  text-align: center;
  text-transform: uppercase;
}

/* ====================== Navigation ====================== */

nav {
  width: 100%;
  height: 80px;
  background-color: #252831;
  display: flex;
}

nav h1 {
  text-align: center;
}

/* Affects title at top of page */
nav h1 a {
  color: #fff;
  font-size: 15pt;
  font-weight: 200;
  /* Space between each letter. Adds space after last letter (but not before first) which makes it not look centered. Fix: adding a margin-left equal to the letter spacing */
  letter-spacing: 10px;
  margin-left: 10px;
  text-transform: uppercase;
}

#breadcrumb {
  padding: 10px 40px 16px;
  list-style: none;
  background-color: #eee;
  font-size: 17px;
  margin: 0;
  text-align: center;
}

/* Display list items side by side */
#breadcrumb li {
  display: inline;
}

/* Adds slash symbol before/behind each list item */
#breadcrumb li + li:before {
  padding: 8px;
  color: black;
  /* Hexadecimal code for nonbreaking space */
  content: '/\00a0';
}

/* Adds color to all links inside list */
#breadcrumb li a {
  color: #252831;
  text-decoration: none;
}

/* Add color on mouseover */
#breadcrumb li a:hover {
  color: #01447e;
  text-decoration: underline;
}

/* ====================== Map ====================== */

#map {
  height: 400px;
  max-width: 100%;
  background-color: #ccc;
}

/* ====================== Restaurant filtering ====================== */

.filter-options {
  background-color: #3367d6;
  display: flex;
  /* Centers along primary axis (horizontal in this case since display: flex sets the flex direction to row by default) */
  justify-content: center;
}

.filter-options select {
  background-color: white;
  border: 1px solid #fff;
  font-family: Arial, sans-serif;
  font-size: 10pt;
  height: 35px;
  letter-spacing: 0;
  margin: 10px;
  padding: 0 10px;
  max-width: 160px;
}

/* ====================== Restaurant listing ====================== */

/* ul element */
#restaurants-list {
  background-color: #f3f3f3;
  list-style: outside none none;
  margin: 0;
  padding: 30px 15px 30px;
  display: grid;
  grid-gap: 20px;
  /* grid-template-columns: repeat(1, 1fr); */
  /* This only takes effect at the smallest (max-width: 767) breakpoint because it centers within a grid cell. There are an odd number of items within the ul, and this does not center the two in the last row when there is more than one column. This cannot be accomplished with CSS Grid due to impenetrable column lines/tracks (whereas with Flexbox, an item can be moved around along a row/column without issue) */
  justify-items: center;
}

#restaurants-list li {
  background-color: #fff;
  border: 2px solid #ccc;
  font-family: Arial, sans-serif;
  padding: 10px;
  max-width: 270px;
}

#restaurants-list .restaurant-img {
  background-color: #ccc;
  /* Ensures image width is not larger than 100% of containing block (the li) */
  max-width: 100%;
}

/* Heading set in main.js, line 147 */
#restaurants-list li h2 {
  /* Matches color used on for restaraunt name and reviews section header on restaurant details page */
  color: #c7650d;
  font-family: Arial, sans-serif;
  font-size: 13pt;
  font-weight: 200;
  letter-spacing: 0;
  line-height: 1.3;
  margin: 20px 0 10px;
  text-transform: uppercase;
}

#restaurants-list p {
  margin: 0;
  font-size: 11pt;
}

/* Applies to "view details" button */
#restaurants-list li a {
  background-color: #252831;
  border-bottom: 3px solid #eee;
  color: #fff;
  display: inline-block;
  font-size: 10pt;
  margin: 15px 0 0;
  padding: 8px 30px 10px;
  bottom: 0;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
}

/* ====================== Restaurant details ====================== */

/* Affects h2 restaurant name on restaurant info page, created in restaurant.html */
#restaurant-name {
  color: #c7650d;
  font-size: 19pt;
  /* 400 is default */
  font-weight: 300;
  letter-spacing: 1.5px;
  margin: 15px 0 35px;
  text-transform: uppercase;
  text-align: center;
}

#restaurant-img {
  width: 50%;
}

#restaurant-address {
  font-size: 12pt;
  margin: 10px 0px;
}

#restaurant-cuisine {
  background-color: #333;
  color: #ddd;
  font-size: 12pt;
  font-weight: 300;
  letter-spacing: 10px;
  margin: 0 0 20px;
  padding: 2px 0;
  text-align: center;
  text-transform: uppercase;
  width: 50%;
}

#restaurant-container,
#reviews-container,
.reviews-form {
  border-bottom: 1px solid #d9d9d9;
  border-top: 1px solid #fff;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Reviews section header created on line 104 of restaurant_info.js. Keep as h3 for proper semantics (h3 must follow h2, which is already being used for restaurant title) */
#reviews-container h3 {
  color: #c7650d;
  font-size: 19pt;
  /* 400 is default */
  font-weight: 300;
  letter-spacing: 1.5px;
  text-transform: uppercase;
}

#reviews-list {
  padding: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: 100%;
}

#reviews-list li {
  background-color: #fff;
  border: 2px solid #f3f3f3;
  margin: 0 0 30px;
  overflow: hidden;
  padding: 35px;
  width: 80%;
}

/* Targets last item in containing element. Selects last li item */
#reviews-list li:last-child {
  margin-bottom: 0;
}

#reviews-list li p {
  margin: 0 0 10px;
  word-wrap: break-word;
}

#restaurant-hours {
  background-color: #fff;
  border: 2px solid #f3f3f3;
  overflow: hidden;
  padding: 20px;
}

#restaurant-hours td {
  color: #666;
}

.restaurant-icon {
  display: flex;
}

.restaurant-fav-icon {
  width: 50px;
  height: 50px;
  margin-top: 10px;
}

.leaflet-container a {
  color: #252831;
}

/* ====================== Media queries ====================== */

/* Breakpoints correspond to those used in the Bootstrap grid system. Note: min and max are inclusive */

/* Mobile phones/extra small screens */
@media screen and (max-width: 767px) {

  nav h1 a {
    /* Makes 1pt smaller */
    font-size: 13pt;
  }

  #restaurants-list li {
    /* For #restaurants-list li there is max-width: 270px set in main CSS; this replacement declaration makes it wider, occuping 90% of the screen width */
    max-width: 90%;
  }

  /* Image on restaurant details page. Width set to 50% in main CSS */
  #restaurant-img {
    width: 80%;
  }

  /* Cuisine type label directly below restaurant image. Set to 50% in main CSS */
  #restaurant-cuisine {
    width: 80%;
  }
}

/* Tablets/small screens */
@media screen and (min-width: 768px) {
  #restaurants-list {
    /* Splits grid into two equally spaced columns. Note: A grid track is the space between any two lines on the grid. The flex unit fr is a length unit used to create flexible grid tracks and represents a fraction of the available space in the container. This is the same effect as grid-template-columns: 1fr 1 fr
    See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout#Track_listings_with_repeat()_notation */
    grid-template-columns: repeat(2, 1fr);
  }

  #restaurants-list li {
    /* For #restaurants-list li there is max-width: 270px set in main CSS; this undoes that, allowing li to occupy more space */
    max-width: none;
  }

  /* Image on restaurant details page. Width set to 50% in main CSS */
  #restaurant-img {
    width: 70%;
  }

  /* Cuisine type label directly below restaurant image. Set to 50% in main CSS */
  #restaurant-cuisine {
    width: 70%;
  }
}

/* Small laptops/medium screens */
@media screen and (min-width: 992px) {
  #restaurants-list {
    /* Splits grid into three equally spaced columns. Three columns of restaurant info cards actually don't appear until width is 974px (not sure why) */
    grid-template-columns: repeat(3, 1fr);
  }

  /* Image on restaurant details page. Width set to 50% in main CSS */
  #restaurant-img {
    width: 60%;
  }

  /* Cuisine type label directly below restaurant image. Set to 50% in main CSS */
  #restaurant-cuisine {
    width: 60%;
  }
}

/* Regular and large laptops, desktops/large screens */
@media screen and (min-width: 1200px) {
  #restaurants-list {
    /* Splits grid into three equally spaced columns. Four columns of restaurant info cards actually don't appear until width is 1216px (not sure why) */
    grid-template-columns: repeat(4, 1fr);
  }
}
